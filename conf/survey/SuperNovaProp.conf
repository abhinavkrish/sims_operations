######################################################################
######### Configuration for  Simple Supernova  Proposal  #################
######################################################################
#  A thorough description of the SN configuration file and target
#       selection algorithm is at the end of this configuration file.
#====================================================================
# -----------------------------------------------------------------------
#                   Event Sequencing Parameters
# -----------------------------------------------------------------------
#   Gap in nights to next observing night. Do we want this proposal to run
#   every night?  Every night = 0 and every other night = 1.
#       Units = nights.  Default = 0.
HiatusNextNight = 0

#   Count of observations to take with one set of ranking.  How often rerank?
reuseRankingCount = 10

#   Maximum number of sequences active simultaneously
#       No Default
MaxNumberActiveSequences = 1000

#   Indicates incomplete sequences may be restarted if terminated early.
#       Default = False
RestartLostSequences = True
                                                                                
#   Indicates successfully completed sequences may be restarted on completion.
#       Default = False
RestartCompleteSequences = True

# table of intervals, in seconds, between consecutive visits 
# within a cycle; itself, one among many cycles within a sequence
# 33 intervals => 34 events
# 3 days interval => coverage for 100 days per sequence
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0
VisitInterval = 3*24*60*60.0

# number of repetitions of the cycle within a sequence
CycleRepeats  = 1

# interval, in seconds, between repetitions of the cycle
CycleInterval = 0.0

# Duration for the sequence.
# >0 overwrites CycleRepeats with the
# number of full cycles that fills duration time.
# =0 makes the system to compute the effective Duration
# with the given CycleRepeats value.
SequenceDuration = 0.0

# Maximum number of events that the proposal allows to miss
# in a sequence without declaring it as lost.
MaxMissedEvents = 1

# List of filters for the sequences.
# The order is not important.
SeqFilter = r
SeqFilter = g
SeqFilter = i
SeqFilter = y
SeqFilter = z

# Filter         Units: label     Format: character
# MinBrightness  Units:           Format: float; relative to v-band brightness
#                                                             and extinction
# MaxBrightness  Units:           Format: float; relative to v-band brightness
#                                                             and extinction
Filter = g
Filter_MinBrig = 21.00
Filter_MaxBrig = 30.00

Filter = r
Filter_MinBrig = 20.50
Filter_MaxBrig = 30.00

Filter = i
Filter_MinBrig = 20.25
Filter_MaxBrig = 30.00

Filter = z
Filter_MinBrig = 17.50
Filter_MaxBrig = 21.00

Filter = y
Filter_MinBrig = 17.50
Filter_MaxBrig = 21.00

# Time window for priority ranking of an observing visit
# The normalized time used is as follows:
#     normalizedT = (currentTime-nextEventTime)/(nextEventTime-lastEventTime)
#
# The priority rank of an event starts rising at WindowStart, reaches a 
# maximum value at WindowMAx, and is abandoned at WindowEnd
WindowStart = -0.35
WindowMax   =  0.35
WindowEnd   =  0.50
# ----------------------------------------------------------------------
#                       Field Selection Parameters
#-----------------------------------------------------------------------
# User Region Definitions
#   list of (ra,dec,width)  containing center point around which a cone of
#                            diameter width is centered.
#   Units: deg,deg,deg Format: float, float, float
#   Default: none; do not include
#userRegion = 54.6014,-26.6726,30.
#userRegion = 90.7745,-28.7939,30.
#userRegion = 66.7618,-30.9152,30.
#userRegion = 148.36,-30.9152,30.
#userRegion = 102.644,-37.2792,30.
#userRegion = 52.4189,-41.5219,30.
#userRegion = 155.625,-33.0366,30.
#userRegion = 153.815,0.904556,30.
#userRegion = 108.05,13.6325,30.
#userRegion = 109.69,5.1472,30.
#userRegion = 51.3242,7.26852,30.
#userRegion = 54.9334,-64.8564,30.

#   Limits in degrees for the range of the sky to build
#       the list of new targets every night.
#       Default = 0.0 for both
newFieldsLimitEast_afterLSTatSunset   = 0.0
newFieldsLimitWest_beforeLSTatSunrise = 0.0

#   During night potentially visible fields are bracketted by region:
#       [LST@sunSet-deltaLST:LST@sunRise+deltaLST],
#                          [Dec-arccos(1/MaxAirmass: Dec+arccos(1/MaxAirmass]
#       Units = degree; Format = float; Default is 60.0
deltaLST = 60.0

#   Galactic plane exclusion zone
#       During a night, the EXCLUDED fields are bracketted by
#       region: +/- peakL deg in latitude at 0 longitude   going to
#               +/- taperL deg in latitude at taperB longitude.
#       defaults: +/- 25. deg in latitude at 0 deg longitude going to
#               +/- 5. deg in latitude at 180. deg longitude.
#       Units = degree; Format = float; Default: taperL=5, taperB=180 peakL=25
taperL = 2.
taperB = 180.
peakL = 20.

#   Min/Max Declination of allowable observations
#       Units = degree; Format = float; Default is 80.
maxReach = 90.0

# --------------------------------------------------------------------
#               Target Selection Parameters
# --------------------------------------------------------------------
# maximum accepted airmass
#   Units: unitless Format: float   Default: 2.0
MaxAirmass   = 2.0
                                                                                
# maximum accepted seeing (not adjusted for airmass)
#   Units: arcseconds Format: float   Default: 2.0
MaxSeeing    = 2.0

#       Minimum Cloud Transparency of allowable observations
#       Units = range 0:1; Format = float; Default is .9; Hardcoded limit=.9
minTransparency = .7

# exposure time in seconds per visit
#   Units: seconds   Format: float   Default: 30.0
ExposureTime = 34.0      # 2 15-secs. exposures, 1 2-secs. readout, 2-secs. shutter time
#ExposureTime = 570.     # composite region for 19 fov hexagons

# MM - NOT YET IMPLEMENTED  11/03/05
#  Hard-coded in AstronomicalSky.py to -18.0 degrees
#   Boundary when TwilightObserving begins/ends
#       Units = degrees Format = float; Default is -12. 
TwilightBoundary = -12.

# -----------------------------------------------------------------------
#                   Target Ranking Parameters
# -----------------------------------------------------------------------
#   Relative priority parameter for the proposal.
#       Factor applied in final rank for all obs proposed by this proposal.
#       Default = 1.0
RelativeProposalPriority = 1.0

#   Proximity bonus factor that is added internally in the proposal
#       to select the observations to propose promoting the closest to the
#       current telescope position.
#       However, the scheduler then replaces this bonus by the more accurate
#       slew time prediction.  Default = 1.0
MaxProximityBonus = 0.5

# Ranking values
#
#   Maximum rank scale for the time window
#       No default.
RankTimeMax = 1.00
                                                                                
#   Maximum rank bonus for sequence that has exhausted allowable misses.
#       No default.
RankLossRiskMax = 1.0
                                                                                
#   Rank for an idle sequence (not started yet).
#       No default.
RankIdleSeq = 0.10
                                                                                
#   Maximum Rank bonus filter  --  N O T     U S E D
#       Default = No longer used in KBO proposal
RankFilter  = 0.10

# Accept observations with low ranking in this proposal
# that have been observed for other proposals?
AcceptSerendipity = True

# Set start and stop time if proposal should not run for the entire simulation
# duration (secs since start of simulation).
#StartTime =
#StopTime =

#==========================================================================
#   The Simple SuperNova program uses a non-terminating observing 
#   schedule of user-defined sequences of observations. The user-defined
#   sequence is further refined into repeating cycles of observation visits.
#   The distribution of sequences is, optimally, uniform; the distribution of
#   cycles within a sequence is also uniform; however, the distribution of 
#   visits within a cycle need not be uniform.
#
#   Using the graphic below, consider a Sequence to be indicated by {}:
#      ..{}...{}...{}...
#
#   Consider a Cycle to be indicated by <>:
#       ..{<>..<>..<>}...{<>..<>..<>}...{<>..<>..<>}...
#       The number of cycles within a sequence is defined by "CycleRepeats".
#       The interval between consecutive cycles is "CycleInterval".
#
#   Consider a Visit to be indicated by |:
#       ..{<|..|...|.|>..<|..|...|.|>..<|..|...|.|>}...{<|..|...|.|>.. 
#       The number of visits per cycle is determined by the number 
#       of "VisitInterval" defined. "VisitInterval" defines the spacing
#       between visits.
#
#   For maximum flexibility, "SequenceDuration" is overloaded to mean:
#       when >0: overwrite CycleRepeats with the number of full cycles that 
#               fills the time specified in "SequenceDuration".
#       when = 0: make the system compute the effective Duration based on the
#           "CycleRepeats" value specified.
#
#   The filter choice used during the visits, depends on "SeqFilter" list.
#       The first listed is considered the primary filter which will be used
#       whenever the seeing meets the filter requirements. The additional 
#       filters are backup filters used when the primary filter is 
#       inappropriate.
#====================================================================
#   Priority Ranking Scheme across all Proposals
#
#   All proposals use the same ranking scale of values [0.0 : 1.0] .
#       Rank 0.0  indicates that, in the current context of the proposal, 
#           a Field should not be observed.
#       Rank 0.1 is a 'stand-by' rank indicating that the Field is ready to
#           be observed (butthere is no urgency).
#       Rank 0.5 indicates increasing urgency to observe the Field due to 
#           the Proposal's scheduling requirements. Few Fields at any moment
#           should have such a high priority.
#       Rank 1.0 indicates urgent need to observe the Field.  Failure to 
#           observe immediately will cause the current sequence to abort.
#====================================================================
#   Priority Ranking in Simple SuperNova Proposal
#
#   The proposal uses the closeness between the current Simulation Time
#       and the Next Event time as the primary ranking criteria for a Field.
#       A timing window is constructed from the time interval between 
#       the next Visit and the previous Visit. From that interval an urgency 
#       scale is created to the precision required.
#
#   The normalized time scale used is as follows:
#       normalizedT = (currentTime-nextVisitTime)/(nextVisitTime-lastVisitTime)
#
#   The priority ranking of an observing visit starts rising at "WindowStart";
#       it reaches a maximum value at "WindowMax"; and it is
#       abandoned at "WindowEnd" if it still hasn't been observed.
#   
#   Using defaults: WindowStart=-0.20, WindowMax=0.20; WindowEnd=4.0,
#       The priority begins rising at (0.2 * normalizedT) before the Visit time;
#       it reaches the maximum priority at (0.2 * normalizedT) after the event 
#       time; and returns to lowest prioirty at (0.4 * normalizedT) after 
#       the Visit time.  
#       Note: negative indicates *before* Visit time, positive is *after* Visit.
